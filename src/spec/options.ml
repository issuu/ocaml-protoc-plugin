(************************************************)
(*       AUTOGENERATED FILE - DO NOT EDIT!      *)
(************************************************)
(* Generated by: ocaml-protoc-plugin            *)
(* https://github.com/issuu/ocaml-protoc-plugin *)
(************************************************)
(*
  Source: options.proto
  Syntax: proto3
  Parameters:
    debug=false
    annot=''
    opens=[]
    int64_as_int=true
    int32_as_int=true
    fixed_as_int=false
    singleton_record=false
*)

open Ocaml_protoc_plugin.Runtime [@@warning "-33"]
(**/**)
module Imported'modules = struct
  module Descriptor = Descriptor
end
(**/**)
module rec Options : sig
  val name': unit -> string
  type t = bool
  val make : ?mangle_names:bool -> unit -> t
  val to_proto: t -> Runtime'.Writer.t
  val from_proto: Runtime'.Reader.t -> (t, [> Runtime'.Result.error]) result
end = struct
  let name' () = "options.Options"
  type t = bool
  let make =
    fun ?mangle_names () ->
    let mangle_names = match mangle_names with Some v -> v | None -> false in
    mangle_names

  let to_proto =
    let apply = fun ~f:f' mangle_names -> f' [] mangle_names in
    let spec = Runtime'.Serialize.C.( basic (1, bool, proto3) ^:: nil ) in
    let serialize = Runtime'.Serialize.serialize [] (spec) in
    fun t -> apply ~f:serialize t

  let from_proto =
    let constructor = fun _extensions mangle_names -> mangle_names in
    let spec = Runtime'.Deserialize.C.( basic (1, bool, proto3) ^:: nil ) in
    let deserialize = Runtime'.Deserialize.deserialize [] spec constructor in
    fun writer -> deserialize writer |> Runtime'.Result.open_error

end
and Ocaml_options : sig
  type t = Options.t option
  val get: Imported'modules.Descriptor.Google.Protobuf.FileOptions.t -> (Options.t option, [> Runtime'.Result.error]) result
  val set: Imported'modules.Descriptor.Google.Protobuf.FileOptions.t -> Options.t option -> Imported'modules.Descriptor.Google.Protobuf.FileOptions.t
end = struct
  type t = Options.t option
  let get extendee = Runtime'.Extensions.get Runtime'.Deserialize.C.( basic_opt (1074, (message (fun t -> Options.from_proto t))) ^:: nil ) (extendee.Imported'modules.Descriptor.Google.Protobuf.FileOptions.extensions') |> Runtime'.Result.open_error
  let set extendee t =
    let extensions' = Runtime'.Extensions.set (Runtime'.Serialize.C.( basic_opt (1074, (message (fun t -> Options.to_proto t))) ^:: nil )) (extendee.Imported'modules.Descriptor.Google.Protobuf.FileOptions.extensions') t in
    { extendee with Imported'modules.Descriptor.Google.Protobuf.FileOptions.extensions' = extensions' }

end